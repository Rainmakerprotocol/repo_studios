- id: docs.agents_guide
  name: "Agent Operations Playbook"
  path: .repo_studios/docs/playbooks/playbook-agent-operations.md
  asset_kind: document
  roles:
    - playbook
  maturity: incubating
  description: "Operational handbook for Repo Studios agents and collaborators."
  consumers:
    - coding_agent
    - human_developer
  status: needs_review
  governance_flags:
    - awaiting_signoff
  artifact_type: md
  related_assets:
    - docs.align_protocol
    - docs.copilot_standards_project
  tags:
    - instructions
    - repo_studios
  phase_origin: phase1
  source_repo: repo_studios
  notes:
    context: "Aligns with new standards stack and inventory automation."
    decisions:
      - "Replaces legacy AGENTS_GUIDE.md."
    blockers: []
- id: docs.prompt_library_usage
  name: "Prompt Library Playbook"
  path: .repo_studios/docs/playbooks/playbook-prompt-library.md
  asset_kind: document
  roles:
    - playbook
  maturity: incubating
  description: "Guidance for selecting and updating prompts from the shared library."
  consumers:
    - coding_agent
    - human_developer
  status: needs_review
  governance_flags:
    - awaiting_signoff
  artifact_type: md
  related_assets:
    - docs.copilot_prompts
    - docs.copilot_prompt_engineering_standards
  tags:
    - prompts
    - repo_studios
  phase_origin: phase1
  source_repo: repo_studios
  notes:
    context: "Captures prompt workflow post-migration."
    decisions:
      - "Replaces legacy PROMPT_LIBRARY_USAGE.md."
    blockers: []
- id: docs.agent_memory_workflow
  name: "Memory Refresh Playbook"
  path: .repo_studios/docs/playbooks/playbook-memory-refresh.md
  asset_kind: document
  roles:
    - playbook
  maturity: incubating
  description: "Operational workflow for refreshing Repo Studios memory stores."
  consumers:
    - coding_agent
    - human_developer
  status: needs_review
  governance_flags:
    - awaiting_signoff
  artifact_type: md
  related_assets:
    - docs.alignment_protocol
    - docs.prompt_library_usage
  tags:
    - memory
    - repo_studios
  phase_origin: phase1
  source_repo: repo_studios
  notes:
    context: "Modernized to align with new automation logs and metrics."
    decisions:
      - "Replaces legacy agent_memory_workflow.md."
    blockers: []
- id: docs.migration_playbook
  name: "Repo Studios Migration Playbook"
  path: .repo_studios/docs/playbooks/playbook-migration.md
  asset_kind: document
  roles:
    - playbook
  maturity: incubating
  description: "Step-by-step guidance for migrating assets from the legacy layout into Repo Studios."
  consumers:
    - coding_agent
    - human_developer
  status: needs_review
  governance_flags:
    - awaiting_signoff
  artifact_type: md
  related_assets:
    - docs.copilot_prompts
    - docs.repo_studios_build_plan
  tags:
    - migration
    - repo_studios
  phase_origin: phase1
  source_repo: repo_studios
  notes:
    context: "Codifies migration workflow replacing ad-hoc checklists."
    decisions:
      - "Requires validation and governance logging after each migration."
    blockers: []
- id: docs.alignment_ledger
  name: "Repo Studios Alignment Ledger"
  path: .repo_studios/docs/governance/alignment-ledger.md
  asset_kind: document
  roles:
    - governance
  maturity: incubating
  description: "Append-only ledger capturing documentation alignment batches and follow-up actions."
  consumers:
    - coding_agent
    - human_developer
  status: needs_review
  governance_flags:
    - awaiting_signoff
  artifact_type: md
  related_assets:
    - docs.alignment_protocol
    - docs.repo_studios_build_plan
  tags:
    - alignment
    - governance
  phase_origin: phase1
  source_repo: repo_studios
  notes:
    context: "Migrated from legacy ledger to preserve audit trail."
    decisions:
      - "Retain historical batches; append future entries in new location."
    blockers: []
- id: docs.copilot_standards_chainlit
  name: "Chainlit UI Standards"
  - id: docs.copilot_prompt_engineering_standards
    name: "Prompt Engineering Standards"
    path: .repo_studios/docs/standards/global/std-global-prompt-engineering.md
    asset_kind: document
    roles:
      - standards
    maturity: incubating
    description: "Repo Studios-wide guidance for prompt and agent instruction authoring."
    consumers:
      - coding_agent
      - human_developer
    status: needs_review
    governance_flags:
      - awaiting_signoff
    artifact_type: md
    related_assets:
      - docs.copilot_prompts
    tags:
      - prompts
      - standards
    phase_origin: phase1
    source_repo: repo_studios
    notes:
      context: "Update terminology to match new schema fields."
      decisions:
        - "Migrate into standards/global prompts section."
      blockers: []
  - id: docs.copilot_prompts
    name: "Repo Studios Prompt Library"
    path: repo_prompts.md
    asset_kind: document
    roles:
      - artifact_sample
    maturity: incubating
    description: "Collection of curated prompts for reuse."
    consumers:
      - coding_agent
      - human_developer
    status: needs_review
    governance_flags:
      - awaiting_signoff
    artifact_type: md
    related_assets:
      - docs.prompt_library_usage
    tags:
      - prompts
      - samples
    phase_origin: phase1
    source_repo: repo_studios
    notes:
      context: "Migrated into canonical root library with structured sections."
      decisions:
        - "Retain Markdown format while evaluating future YAML registry."
      blockers: []
  - id: docs.copilot_standards_chainlit
    name: "Chainlit UI Standards"
    path: .repo_studios/docs/standards/global/std-global-chainlit-ui.md
    asset_kind: document
    roles:
      - standards
    maturity: incubating
    description: "Chainlit-specific standards covering async flows, state, and message semantics."
    consumers:
      - coding_agent
      - ci_pipeline
    status: needs_review
    governance_flags:
      - awaiting_signoff
    artifact_type: md
    related_assets:
      - docs.copilot_standards_project
    tags:
      - chainlit
      - standards
    phase_origin: phase1
    source_repo: repo_studios
    notes:
      context: "Verify relevance for new projects; may become optional module."
      decisions:
        - "Mark as optional add-on in standards/project subset."
      blockers: []
  - id: docs.copilot_standards_html
    name: "HTML Engineering Standards"
    path: .repo_studios/docs/standards/global/std-global-html-coding.md
    asset_kind: document
    roles:
      - standards
    maturity: incubating
    description: "HTML authoring and sanitation standards for Repo Studios outputs."
    consumers:
      - coding_agent
      - docs_generator
    status: needs_review
    governance_flags:
      - awaiting_signoff
    artifact_type: md
    related_assets:
      - docs.copilot_standards_markdown
    tags:
      - html
      - standards
    phase_origin: phase1
    source_repo: repo_studios
    notes:
      context: "Verify HTML sanitization patterns remain aligned with Markdown authoring guidance."
      decisions:
        - "Treat as optional module for projects exposing rendered HTML."
      blockers: []
  - id: docs.copilot_standards_markdown
    name: "Markdown Authoring Standards"
    path: .repo_studios/docs/standards/global/std-global-markdown-authoring.md
    asset_kind: document
    roles:
      - standards
    maturity: incubating
    description: "Markdown formatting standards for Repo Studios documentation."
    consumers:
      - coding_agent
      - human_developer
      - docs_generator
    status: needs_review
    governance_flags:
      - awaiting_signoff
    artifact_type: md
    related_assets:
      - docs.copilot_standards_html
      - docs.inventory_spec
    tags:
      - markdown
      - standards
    phase_origin: phase1
    source_repo: repo_studios
    notes:
      context: "Consider elevation to global standards baseline."
      decisions:
        - "Keep as required reference for Repo Studios."
      blockers: []
  - id: docs.copilot_standards_python
    name: "Python Engineering Standards"
    path: .repo_studios/docs/standards/global/std-global-python-engineering.md
    asset_kind: document
    roles:
      - standards
    maturity: incubating
    description: "Python-specific engineering guardrails for Repo Studios automation."
    consumers:
      - coding_agent
      - human_developer
    status: needs_review
    governance_flags:
      - awaiting_signoff
    artifact_type: md
    related_assets:
      - docs.copilot_instructions_python
      - docs.repo_studios_code_cleanup
    tags:
      - python
      - standards
    phase_origin: phase1
    source_repo: repo_studios
    notes:
      context: "Ensure cross-references with cleanup and mission standards stay current."
      decisions:
        - "Adopt as baseline Python guardrail once CI gating finalizes."
      blockers: []
- id: docs.copilot_standards_monkey_patch
  name: "Monkey Patch Governance"
  path: .repo_studios/docs/standards/global/std-global-monkey-patching.md
  asset_kind: document
  roles:
    - standards
  maturity: incubating
  description: "Guardrails for introducing, auditing, and retiring monkey patches."
  consumers:
    - coding_agent
    - ci_pipeline
  status: needs_review
  governance_flags:
    - awaiting_signoff
  artifact_type: md
  related_assets:
    - scripts.scan_monkey_patches
    - docs.copilot_standards_project
  tags:
    - monkey_patch
    - standards
  phase_origin: phase1
  source_repo: repo_studios
  notes:
    context: "Couple with future automation that scans active patches."
    decisions:
      - "Require expiry plans and telemetry before approval."
    blockers: []
- id: docs.copilot_standards_project
  name: "Project Operating Standard"
  path: .repo_studios/docs/standards/project/std-project-operating-standard.md
  asset_kind: document
  roles:
    - standards
  maturity: incubating
  description: "Project-level guardrails covering technology stack and behavioral expectations."
  consumers:
    - coding_agent
    - human_developer
  status: needs_review
  governance_flags:
    - awaiting_signoff
  artifact_type: md
  related_assets:
    - docs.copilot_standards_chainlit
    - docs.copilot_standards_monkey_patch
  tags:
    - project
    - standards
  phase_origin: phase1
  source_repo: repo_studios
  notes:
    context: "Use as baseline for project overrides and onboarding decks."
    decisions:
      - "Keep aligned with global standards updates and CI guardrails."
    blockers: []
- id: docs.copilot_instructions_python
  name: "Python Remediation Instructions"
  path: .repo_studios/docs/standards/project/std-project-python-instructions.md
  asset_kind: document
  roles:
    - standards
  maturity: incubating
  description: "Project-scoped remediation catalog for recurring Python cleanup issues."
  consumers:
    - coding_agent
    - human_developer
  status: needs_review
  governance_flags:
    - awaiting_signoff
  artifact_type: md
  related_assets:
    - docs.copilot_standards_python
    - docs.copilot_standards_project
  tags:
    - python
    - remediation
  phase_origin: phase1
  source_repo: repo_studios
  notes:
    context: "Migrated from Jarvis2 remediation guide; keep updated with new recurring issues."
    decisions:
      - "Agents may append new catalog entries after documenting repeat fixes."
    blockers: []
- id: docs.docs_inventory_notes
  name: "Docs Inventory Notes"
  path: .repo_studios/docs/inventory/inventory-notes.md
  asset_kind: document
  roles:
    - artifact_sample
  maturity: incubating
  description: "Historical notes on documentation inventory and governance."
  consumers:
    - coding_agent
    - human_developer
  status: needs_review
  governance_flags:
    - awaiting_signoff
  artifact_type: md
  related_assets:
    - docs.inventory_spec
  tags:
    - inventory
    - history
  phase_origin: phase1
  source_repo: repo_studios
  notes:
    context: "Migrated into `.repo_studios/docs/inventory/` with refreshed metadata and action list."
    decisions:
      - "Track ongoing inventory governance tasks in this file until superseded."
    blockers: []
- id: docs.standards_extraction_spec
  name: "Standards Extraction Spec"
  path: .repo_studios/docs/automation/standards-extraction-spec.md
  asset_kind: document
  roles:
    - standards
    - playbook
  maturity: incubating
  description: "Specification for extracting and consolidating standards."
  consumers:
    - coding_agent
    - ci_pipeline
  status: needs_review
  governance_flags:
    - awaiting_signoff
  artifact_type: md
  related_assets:
    - scripts.standards_extraction
  tags:
    - standards
    - extraction
  phase_origin: phase1
  source_repo: repo_studios
  notes:
    context: "Resides under automation docs with refreshed metadata."
    decisions:
      - "Keep as technical reference for rule extraction tooling."
    blockers: []
- id: docs.standards_index_schema
  name: "Standards Index Schema"
  path: .repo_studios/docs/automation/standards-index-schema.md
  asset_kind: document
  roles:
    - standards
  maturity: incubating
  description: "Schema description for the consolidated standards index."
  consumers:
    - coding_agent
    - ci_pipeline
  status: needs_review
  governance_flags:
    - awaiting_signoff
  artifact_type: md
  related_assets:
    - repo_files.copilot_standards_index
  tags:
    - standards
    - schema
  phase_origin: phase1
  source_repo: repo_studios
  notes:
    context: "Migrated into automation docs with refreshed schema guidance."
    decisions:
      - "Supersedes legacy standards index schema reference."
    blockers: []
- id: docs.alignment_protocol
  name: "Alignment Protocol"
  path: .repo_studios/alignment_protocol.md
  asset_kind: document
  roles:
    - playbook
    - standards
  maturity: incubating
  description: "Living blueprint for AI and developer collaboration."
  consumers:
    - coding_agent
    - human_developer
  status: active
  artifact_type: md
  related_assets:
    - docs.agents_guide
    - docs.alignment_ledger
  tags:
    - alignment
    - collaboration
  phase_origin: phase1
  source_repo: repo_studios
  notes:
    context: "Update as collaboration practices evolve."
    decisions:
      - "Serve as central reference for future projects."
    blockers: []
- id: docs.repo_studios_build_plan
  name: "Repo Studios Build Plan"
  path: .repo_studios/docs/repo_studios_build_plan.md
  asset_kind: document
  roles:
    - playbook
    - standards
  maturity: incubating
  description: "Phased roadmap for Repo Studios setup and migration."
  consumers:
    - coding_agent
    - human_developer
  status: active
  artifact_type: md
  related_assets:
    - docs.inventory_spec
    - docs.alignment_protocol
  tags:
    - roadmap
    - planning
  phase_origin: phase1
  source_repo: repo_studios
  notes:
    context: "Update as phases progress and deliverables land."
    decisions:
      - "Use as authoritative plan for migration tasks."
    blockers: []
- id: docs.inventory_spec
  name: "Inventory Schema Specification"
  path: .repo_studios/docs/inventory_schema_spec.md
  asset_kind: document
  roles:
    - standards
    - playbook
  maturity: incubating
  description: "Defines the YAML schema and rules for Repo Studios inventory catalog."
  consumers:
    - coding_agent
    - ci_pipeline
    - docs_generator
  status: active
  artifact_type: md
  related_assets:
    - inventory.enums
    - inventory.entry_template
  tags:
    - inventory
    - schema
  phase_origin: phase1
  source_repo: repo_studios
  notes:
    context: "Keep synchronized with automated validators and templates."
    decisions:
      - "Treat as canonical reference for inventory entries."
    blockers: []
